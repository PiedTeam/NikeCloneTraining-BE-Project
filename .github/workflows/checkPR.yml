# Currently migrating backdown to npm

# # Run: Check CI on PR
# name: Check CI on PR

# on:
#     pull_request:
#         branches: ["main"]

# jobs:
#     lint_PR:
#         runs-on: ubuntu-latest

#         steps:
#             - name: Checkout
#               uses: actions/checkout@v4

#             - name: Check pnpm standalone
#               uses: actions/cache@v4
#               with:
#                   path: /home/runner/setup-pnpm/node_modules/.bin/pnpm
#                   key: ${{ runner.os }}-pnpm-standalone
#                   restore-keys: |
#                       ${{ runner.os }}-pnpm-standalone

#             - name: Install pnpm
#               uses: pnpm/action-setup@v4
#               with:
#                   version: 9
#                   run_install: false
#                   standalone: false

#             - name: Install node
#               uses: actions/setup-node@v4
#               with:
#                   node-version: 20

#             # - name: which pnpm
#             #   shell: bash
#             #   run: |
#             #     which pnpm
#             #   env:
#             #     TEST_TEST: ${{ steps.pnpmahihi.outputs.bin_dest }}

#             # - name: echo echo $PNPM_HOME
#             #   shell: bash
#             #   run: |
#             #     echo $PNPM_HOME

#             # - name: echo pnpm store directory
#             #   shell: bash
#             #   run: |
#             #     pnpm store path

#             # - name: Get pnpm store directory
#             #   shell: bash
#             #   run: |
#             #     echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

#             - name: Setup pnpm node_module cache
#               uses: actions/cache@v4
#               with:
#                   path: /home/runner/setup-pnpm/node_modules/.bin/store/v3
#                   key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#                   restore-keys: |
#                       ${{ runner.os }}-pnpm-store-

#             - name: Install dependencies
#               run: pnpm install

#             - name: Lint
#               run: pnpm run prettier:check && pnpm run eslint:check-allow-warning && pnpm run check-types
